---
- hosts: all

  vars_files:
    - default.config.yml

  pre_tasks:
    - name: Include playbook configuration.
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/config.yml"
      tags: ['always']

    # macOS now ships with ZSH by default, so this assumes that
    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: Install zsh-autosuggestions plugin
      shell: git clone https://github.com/zsh-users/zsh-autosuggestions /Users/{{ lookup('env', 'USER') }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

  roles:
    - role: elliotweiser.osx-command-line-tools
      # Install Mac Apps first, as Xcode is a dependency on a lot of brew stuff
    - role: geerlingguy.mac.mas
      when: mas_installed_apps or mas_installed_app_ids
      tags: ['mas']
    # Brew stuff next, as these are core tools that my dotfiles depend on
    - role: geerlingguy.mac.homebrew
      tags: ['homebrew']
    - role: geerlingguy.dotfiles
      when: configure_dotfiles
      tags: ['dotfiles']
    - role: geerlingguy.mac.dock
      when: configure_dock
      tags: ['dock']

  tasks:
    - import_tasks: tasks/macos.yml
      when: configure_macos
      tags: ['macos']

    - import_tasks: tasks/composer.yml
      tags: ['composer']

    - import_tasks: tasks/yarn.yml
      tags: ['yarn']

    - import_tasks: tasks/pip.yml
      tags: ['pip']

    - name: Run configured post-provision ansible task files.
      include_tasks: "{{ outer_item }}"
      loop_control:
        loop_var: outer_item
      with_fileglob: "{{ post_provision_tasks|default(omit) }}"
      tags: ['post']
